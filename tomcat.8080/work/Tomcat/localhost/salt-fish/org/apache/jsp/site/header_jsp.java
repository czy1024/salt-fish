/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-12-04 01:24:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.site;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.HttpSession;
import com.luna.saltfish.constant.*;
import com.luna.saltfish.dbHandle.*;
import com.luna.saltfish.vo.*;
import com.luna.saltfish.tools.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.luna.saltfish.constant");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.luna.saltfish.dbHandle");
    _jspx_imports_packages.add("com.luna.saltfish.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.luna.saltfish.tools");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

/*
导航栏
*/
      out.write('\n');
      out.write('\n');

    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";

      out.write("\n");
      out.write("<nav class=\"navbar navbar-default\">\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <!-- Brand and toggle get grouped for better mobile display -->\n");
      out.write("        <div class=\"navbar-header\">\n");
      out.write("            <button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("                    data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n");
      out.write("                    aria-expanded=\"false\">\n");
      out.write("                <span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span>\n");
      out.write("                <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span>\n");
      out.write("            </button>\n");
      out.write("            <a class=\"navbar-brand\" href=\"");
      out.print(basePath );
      out.write("index.jsp?ceta=0\"\n");
      out.write("               style=\"font-size: 24px\">盐鱼物品交易网站</a>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Collect the nav links, forms, and other content for toggling -->\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("            <ul class=\"nav navbar-nav\">\n");
      out.write("            </ul>\n");
      out.write("            <form action=\"search.jsp\"\n");
      out.write("                  class=\"navbar-form navbar-left\" role=\"search\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <input type=\"text\" name=\"key\" class=\"form-control\" placeholder=\"关键字\">\n");
      out.write("                </div>\n");
      out.write("                <button type=\"submit\" class=\"btn btn-default\">查找物品</button>\n");
      out.write("            </form>\n");
      out.write("\n");
      out.write("            ");
 UserHandle userHandle = new UserHandle();
                Boolean isLogined = LoginVerify.isLogin(request);
                User user = null;
                String email = "";

                //email 是邮箱或用户名（如果存在）
                if (isLogined) {
                    user = (User) session.getAttribute(UserLoginConstant.LOGIN_USER);
                    //更新信息，seesion中的user信息可能滞后！
                    user = userHandle.findById(user.getId());
                    email = (user.getName() == null || user.getName().length() == 0) ? user.getEmail() : user.getName();
                }
            
      out.write("\n");
      out.write("            <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("                ");
 Integer goodsNum = 0;
                    Integer messNum = 0;
                    if (user != null) {
                        ShopCartHandle shopCartHandle = new ShopCartHandle();
                        goodsNum = shopCartHandle.getShopCartNum(user.getId());
                        shopCartHandle.close();//关闭连接
                        messNum = user.getMessnum();
                    }
                
      out.write("\n");
      out.write("                ");

                    if (isLogined != null && user != null && isLogined == true) {
                
      out.write("\n");
      out.write("                <li><a href=\"user/personal.jsp?tab=shopcart&userId=");
      out.print(user.getId());
      out.write("\">购物车(<span style=\"color: #d00;\"\n");
      out.write("                                                                                                id=\"goodsNum\">");
      out.print(goodsNum );
      out.write("</span>)</a>\n");
      out.write("                </li>\n");
      out.write("                <li><a href=\"user/personal.jsp?tab=mess&userId=");
      out.print(user.getId());
      out.write("\">消息(<span id=\"mess-number\"\n");
      out.write("                                                                                           style=\"color: #e00;\"\n");
      out.write("                                                                                           id=\"messNum\">");
      out.print(messNum );
      out.write("</span>)</a>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"dropdown\"><a href=\"javascript:void(0)\"\n");
      out.write("                                        class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n");
      out.write("                                        aria-haspopup=\"true\" aria-expanded=\"false\">");
      out.print(email);
      out.write(" <span\n");
      out.write("                        class=\"caret\"></span> </a>\n");
      out.write("                    <ul class=\"dropdown-menu\">\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=info\">个人中心</a></li>\n");
      out.write("                        ");
if (LoginVerify.isAdmin(request)) {
      out.write("\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=auditing\">物品审核</a>\n");
      out.write("                        </li>\n");
      out.write("                        ");
}
      out.write("\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=history\">购买历史</a></li>\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=push\">发布物品</a></li>\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=like\">收藏夹</a></li>\n");
      out.write("                        <!-- 并不需要设置页\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.print(basePath );
      out.write("user/personal.jsp?userId=");
      out.print(user.getId());
      out.write("&tab=setting\">设置</a></li>\n");
      out.write("\t\t\t\t\t-->\n");
      out.write("                        <li><a href=\"");
      out.print(basePath );
      out.write("ExitLoginServlet\">退出登录</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("                ");

                } else {
      out.write("\n");
      out.write("                <li><a href=\"");
      out.print(basePath );
      out.write("user/login.jsp\">登录</a></li>\n");
      out.write("                <li><a href=\"");
      out.print(basePath );
      out.write("user/register.jsp\">注册</a></li>\n");
      out.write("                ");
 }
      out.write("\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("        <!-- /.navbar-collapse -->\n");
      out.write("    </div>\n");
      out.write("    <!-- /.container-fluid --> </nav>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
