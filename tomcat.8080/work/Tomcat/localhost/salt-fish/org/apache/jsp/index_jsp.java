/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-12-04 01:24:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.luna.saltfish.tools.*;
import com.luna.saltfish.dbHandle.UserHandle;
import com.luna.saltfish.constant.*;
import org.w3c.dom.UserDataHandler;
import com.luna.saltfish.dbHandle.GoodsHandle;
import java.text.SimpleDateFormat;
import java.sql.*;
import java.lang.Math;
import com.luna.saltfish.tools.*;
import javax.servlet.http.HttpSession;
import java.util.*;
import com.luna.saltfish.vo.*;
import com.luna.saltfish.vo.Goods;
import com.luna.saltfish.vo.User;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.luna.saltfish.constant");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.luna.saltfish.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.luna.saltfish.tools");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("com.luna.saltfish.dbHandle.UserHandle");
    _jspx_imports_classes.add("org.w3c.dom.UserDataHandler");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.lang.Math");
    _jspx_imports_classes.add("com.luna.saltfish.dbHandle.GoodsHandle");
    _jspx_imports_classes.add("com.luna.saltfish.vo.Goods");
    _jspx_imports_classes.add("com.luna.saltfish.vo.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
            + path + "/";
    // http://127.0.0.1:8080/salt-fish/

      out.write('\n');

    //显示第几页
    int pn = 1;
    //每页显示几条？
    int perPage = StaticVar.PERPAGE_GOODS;
    int ceta = 0;
    String tmpString = request.getParameter("pn");
    //获取pn参数
    if (tmpString != null && tmpString.length() != 0) {
        if (Integer.parseInt(tmpString) > 0) {
            pn = Integer.parseInt(tmpString);
        }
    }
    //获取类别参数
    tmpString = request.getParameter("ceta");
    if (tmpString != null && tmpString.length() != 0) {
        if (Integer.parseInt(tmpString) > 0) {
            ceta = Integer.parseInt(tmpString);
        }
    }
    int limitMin = (pn - 1) * perPage;
    GoodsHandle goodHandle = new GoodsHandle();
    UserHandle userHandle = new UserHandle();
    List<Goods> list = null;
    IntHolder num = new IntHolder(0);

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"zh-CN\">\n");
      out.write("<head>\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "site/head.jsp", out, false);
      out.write("\n");
      out.write("    <title>物品交易-盐鱼-首页</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "site/header.jsp", out, false);
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-md-3\">\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-md-12\">\n");
      out.write("                        <div class=\"list-group\">\n");
      out.write("                            <span class=\"list-group-item list-group-item-info\">分类</span> <a\n");
      out.write("                                href=\"index.jsp?ceta=0\"\n");
      out.write("                                class=\"list-group-item ");
      out.print(ceta == 0 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"> <!-- 这里写数量，暂时搁置 -->\n");
      out.write("\t\t\t\t\t\t\t</span>全部</a> <a href=\"index.jsp?ceta=2\"\n");
      out.write("                                             class=\"list-group-item ");
      out.print(ceta == 2 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>生活出行</a> <a href=\"index.jsp?ceta=1\"\n");
      out.write("                                                                 class=\"list-group-item ");
      out.print(ceta == 1 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>书籍</a> <a href=\"index.jsp?ceta=5\"\n");
      out.write("                                                               class=\"list-group-item ");
      out.print(ceta == 5 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>体育运动</a> <a href=\"index.jsp?ceta=4\"\n");
      out.write("                                                                 class=\"list-group-item ");
      out.print(ceta == 4 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>电子产品</a> <a href=\"index.jsp?ceta=3\"\n");
      out.write("                                                                 class=\"list-group-item ");
      out.print(ceta == 3 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>衣物鞋包</a> <a href=\"index.jsp?ceta=6\"\n");
      out.write("                                                                 class=\"list-group-item ");
      out.print(ceta == 6 ? "active" : "");
      out.write("\"><span\n");
      out.write("                                class=\"badge\"></span>其他</a>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-md-8\">\n");
      out.write("                <div class=\"list-group\">\n");
      out.write("                    ");

                        switch (ceta) {
                            case 0:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-全部</span>");
                                list = goodHandle.findAll(num, limitMin, perPage);
                                break;
                            case 1:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-书籍</span>");
                                list = goodHandle.findByCeta(1, num, limitMin, perPage);
                                break;
                            case 2:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-生活出行</span>");
                                list = goodHandle.findByCeta(2, num, limitMin, perPage);
                                break;
                            case 3:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-衣物鞋包</span>");
                                list = goodHandle.findByCeta(3, num, limitMin, perPage);
                                break;
                            case 4:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-电子产品</span>");
                                list = goodHandle.findByCeta(4, num, limitMin, perPage);
                                break;
                            case 5:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-体育运动</span>");
                                list = goodHandle.findByCeta(5, num, limitMin, perPage);
                                break;
                            case 6:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-其他</span>");
                                list = goodHandle.findByCeta(6, num, limitMin, perPage);
                                break;
                            default:
                                out.println("<span class=\"list-group-item list-group-item-info\">分类-全部</span>");
                                list = goodHandle.findAll(num, limitMin, perPage);
                                break;
                        }
                        if (list.size() != 0) {
                            for (Goods good : list) {
                                if (good.getProducterId() == null) {
                                    continue;
                                }
                                User user = userHandle.findById(good.getProducterId());
                    
      out.write("\n");
      out.write("                    <div class=\"list-group-item\">\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"goods-img col-md-2\">\n");
      out.write("                                <img class=\"img-rounded img-item-goods\"\n");
      out.write("                                     src=\"");
      out.print(good.getImage());
      out.write("\"/>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-10\">\n");
      out.write("                                <div class=\"row detail-goods lead\">\n");
      out.write("                                    <a href=\"goods/info.jsp?goodsId=");
      out.print(good.getId());
      out.write('"');
      out.write('>');
      out.print(good.getName());
      out.write("\n");
      out.write("                                    </a>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"row detail-goods\">\n");
      out.write("                                    ￥<span class=\"text-danger\">");
      out.print(Math.round(good.getPrice()));
      out.write("</span>\n");
      out.write("                                    <span class=\"detail-goods text-muted\"> 发布者:");

                                        if (user.getName() != null) {
                                    
      out.write("\n");
      out.write("                                        ");
      out.print(user.getName());
      out.write(' ');

                                        } else {
                                        
      out.print(user.getEmail());
      out.write(' ');

                                            }
                                        
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t</span> <span class=\"detail-goods text-muted\"> 时间：\n");
      out.write("                                    ");

                                        java.util.Date date = good.getCreatDate();
                                        SimpleDateFormat myFmt = new SimpleDateFormat("yyyy年MM月dd日 HH:mm");
                                        String dateStr = myFmt.format(date);
                                        out.print(dateStr);
                                    
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t</span>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    ");

                        }
                    } else {
                    
      out.write("\n");
      out.write("                    <div class=\"list-group-item\">此分类下暂无物品或页数已经到达最大！</div>\n");
      out.write("                    ");

                        }
                    
      out.write("\n");
      out.write("                </div>\n");
      out.write("                ");

                    int maxPage = num.value % perPage == 0 ? num.value / perPage : num.value / perPage + 1;
                
      out.write("\n");
      out.write("                <nav>\n");
      out.write("                    <ul class=\"pager\">\n");
      out.write("                        <li class=\"\"><a class=\"page-cut-btn\"\n");
      out.write("                                        href=\"index.jsp?ceta=");
      out.print(ceta);
      out.write("&pn=");
      out.print(pn <= 1 ? pn : pn - 1);
      out.write("\"><span\n");
      out.write("                                aria-hidden=\"true\"></span>");
      out.print(pn > 1 ? "上一页" : "位于首页");
      out.write("\n");
      out.write("                        </a></li>\n");
      out.write("                        <li style=\"\"><span style=\"border: 0\"> 第<span\n");
      out.write("                                style=\"color: red; border: 0\">");
      out.print(pn);
      out.write("</span>页\n");
      out.write("\t\t\t\t\t\t</span></li>\n");
      out.write("                        <li class=\"\"><a class=\"page-cut-btn\"\n");
      out.write("                                        href=\"index.jsp?ceta=");
      out.print(ceta);
      out.write("&pn=");
      out.print(pn < maxPage ? pn + 1 : pn);
      out.write('"');
      out.write('>');
      out.print(pn < maxPage ? "下一页" : "位于末页");
      out.write("\n");
      out.write("                            <span aria-hidden=\"true\"></span></a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </nav>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "site/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");

    goodHandle.close();
    userHandle.close();

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
